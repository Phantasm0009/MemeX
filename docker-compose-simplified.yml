services:
  # Discord Bot Service
  discord-bot:
    build: .
    container_name: memex-discord-bot
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - BOT_TOKEN=${BOT_TOKEN}
      - CLIENT_ID=${CLIENT_ID}
      - GUILD_ID=${GUILD_ID}
      - MARKET_CHANNEL_ID=${MARKET_CHANNEL_ID}
      - BOT_DEVELOPERS=${BOT_DEVELOPERS}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - BACKEND_URL=http://backend:3001
      - TWITTER_BEARER_TOKEN=${TWITTER_BEARER_TOKEN}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_REFRESH_TOKEN=${REDDIT_REFRESH_TOKEN}
    command: ["node", "index.js"]
    depends_on:
      - backend
    networks:
      - memex-network
    volumes:
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Bot healthy')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Service (publicly accessible)
  backend:
    build: .
    container_name: memex-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - BACKEND_PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - TWITTER_BEARER_TOKEN=${TWITTER_BEARER_TOKEN}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_REFRESH_TOKEN=${REDDIT_REFRESH_TOKEN}
    command: ["node", "backend/server.js"]
    networks:
      - memex-network
    volumes:
      - ./market.json:/app/market.json
      - ./meta.json:/app/meta.json
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (API only)
  nginx:
    image: nginx:alpine
    container_name: memex-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-simple-test.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    networks:
      - memex-network
    depends_on:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: memex-certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:rw
      - /var/www/certbot:/var/www/certbot:rw
    depends_on:
      - nginx
    command: ["sh", "-c", "echo 'Certbot ready' && sleep infinity"]

networks:
  memex-network:
    driver: bridge

volumes:
  memex-data:
    driver: local
