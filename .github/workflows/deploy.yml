name: ðŸš€ Deploy to Production

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run health check
      run: npm run health
    
    - name: Test Discord bot startup
      run: timeout 10s npm run bot || true
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

  deploy-vps:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /var/www/italian-meme-stock-exchange
          git pull origin main
          npm ci --only=production
          pm2 reload ecosystem.config.js --env production
          pm2 save
          echo "âœ… Deployment completed!"

  deploy-railway:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Railway
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        railway up --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  health-check:
    needs: [deploy-vps, deploy-railway]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Health Check
      run: |
        sleep 30
        curl -f ${{ secrets.HEALTH_CHECK_URL }}/health || exit 1
        echo "âœ… Health check passed!"
